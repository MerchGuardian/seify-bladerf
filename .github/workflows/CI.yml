name: rust
on:
  push:
    branches:
    - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fmt:
    runs-on: ubuntu-latest
    name: stable / fmt
    steps:
      - uses: actions/checkout@v4
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: cargo fmt --check
        run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    name: ${{ matrix.toolchain }} / clippy
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        # Get early warning of new lints which are regularly introduced in beta channels.
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: cargo clippy
        uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-check'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: cargo fmt --check
      run: "nix develop --command bash -c 'cargo build && cargo doc --no-deps'"

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: cargo fmt --check
      run: "nix develop --command bash -c 'cargo build'"

  build-windows:
    env:
      BLADERF_INCLUDE_PATH: "D:\\a\\seify-bladerf\\bladeRF\\include"
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
  
    - name: Install rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Download libladerf
      run: Invoke-WebRequest https://github.com/Nuand/bladeRF/releases/download/2024.05/bladeRF-win-installer-2024.05.exe -OutFile libbladerf_install.exe

    - name: Install libbladerf
      # https://jrsoftware.org/ishelp/index.php?topic=setupcmdline
      run: |
        .\libbladerf_install.exe /SP /SILENT /SUPPRESSMSGBOXES /DIR="D:\a\seify-bladerf\bladeRF" /LOG="libbladerf_install.log"
        ls
        ls $Env:BLADERF_INCLUDE_PATH
        type libbladerf_install.log

    - name: build 
      run: cargo build